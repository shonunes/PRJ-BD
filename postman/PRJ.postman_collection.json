{
	"info": {
		"_postman_id": "b3e47c9a-cbc1-4104-899b-d88ef7c95770",
		"name": "PRJ",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "34038238"
	},
	"item": [
		{
			"name": "Register Patient",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"cc\": 12347597,\n    \"name\": \"Diogo Santos\",\n    \"password\": \"diogo santos\",\n    \"health_number\": 99373547,\n    \"emergency_contact\": 962465824,\n    \"birthday\": \"1985-05-09\",\n    \"email\": \"diogosantos@gmail.com\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/dbproj/register/patient",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"dbproj",
						"register",
						"patient"
					]
				},
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": []
		},
		{
			"name": "Register Assistant",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"cc\": 37565639,\n    \"name\": \"Hugo Mendes\",\n    \"password\": \"hugomendes\",\n    \"contract_id\": 5,\n    \"salary\": 60000,\n    \"contract_issue_date\": \"2022-07-04\",\n    \"contract_due_date\": \"2025-07-04\",\n    \"birthday\": \"1985-01-12\",\n    \"email\": \"hugomendes@gmail.com\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/dbproj/register/assistant",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"dbproj",
						"register",
						"assistant"
					]
				},
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": []
		},
		{
			"name": "Register Nurse",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"cc\": 22585639,\n    \"name\": \"Filipe Gonçalves\",\n    \"password\": \"filipegoncalves\",\n    \"contract_id\": 141,\n    \"salary\": 120000,\n    \"contract_issue_date\": \"2023-05-15\",\n    \"contract_due_date\": \"2027-05-15\",\n    \"birthday\": \"1988-05-23\",\n    \"email\": \"filipegoncalves@gmail.com\",\n    \"superior_email\": null\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/dbproj/register/nurse",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"dbproj",
						"register",
						"nurse"
					]
				},
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": []
		},
		{
			"name": "Register Doctor",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"cc\": 57773244,\n    \"name\": \"José Mário\",\n    \"password\": \"josemario\",\n    \"contract_id\": 142,\n    \"salary\": 148000,\n    \"contract_issue_date\": \"2018-03-19\",\n    \"contract_due_date\": \"2028-03-19\",\n    \"birthday\": \"2004-08-30\",\n    \"email\": \"josemario@gmail.com\",\n    \"license_id\": \"afb5sjk\",\n    \"license_company\": \"Pfizer\",\n    \"license_issue_date\": \"1998-05-08\",\n    \"license_due_date\": \"2028-05-08\",\n    \"specialties\": [\n        {\n            \"specialty_name\": \"oftalmologista\",\n            \"parent_specialty\": \"cardiologista\"\n        }\n    ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/dbproj/register/doctor",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"dbproj",
						"register",
						"doctor"
					]
				},
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": []
		},
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful PUT request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\": \"hugomendes@gmail.com\",\n    \"password\": \"hugomendes\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/dbproj/user",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"dbproj",
						"user"
					]
				},
				"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
			},
			"response": []
		},
		{
			"name": "Schedule Appointment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6MTIzNDc1OTcsInR5cGUiOiJwYXRpZW50IiwiZXhwIjoxNzE2ODk2MTM4Ljk0MDIzMTZ9.0x4YjHZhwzOaSXRWB7y-ov4PJzCRxyHBwBz-Zmz-a4c",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"doctor_id\": \"josemario@gmail.com\",\n    \"appointment_time\": \"2024-06-05 08:30:00\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/dbproj/appointment",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"dbproj",
						"appointment"
					]
				},
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": []
		},
		{
			"name": "See Appointments",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6MTIzNDc1OTcsInR5cGUiOiJwYXRpZW50IiwiZXhwIjoxNzE2ODk2NTcxLjMzNjM5NTd9.FVtkDCVdha-fTqf4fC9h5QnYtaVGgm2VyZzHq-1-Lws",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:8080/dbproj/appointments/12347597",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"dbproj",
						"appointments",
						"12347597"
					]
				},
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": []
		},
		{
			"name": "Schedule Surgery",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6Imh1Z29tZW5kZXNAZ21haWwuY29tIiwidHlwZSI6ImFzc2lzdGFudCIsImV4cCI6MTcxNjg5NjgxNC4zMTY3NX0.RB00bURddvPDTGZYPBncYBOw8IB_fFnoyJQbbZvDkig",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"patient_id\": 68340365,\n    \"doctor\": \"magdanunes@gmail.com\",\n    \"nurses\": [],\n    \"surgery_start\": \"2024-05-29 19:00:00\",\n    \"surgery_end\": \"2024-05-29 19:30:00\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/dbproj/surgery",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"dbproj",
						"surgery"
					]
				},
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": []
		},
		{
			"name": "Get Prescription",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6MjEzNDU0ODMsInR5cGUiOiJwYXRpZW50IiwiZXhwIjoxNzE2ODUxNDUzLjIxNDQ2MzJ9.3JSuiPcG2GkI0gjvl5YBR3tkno7uXBsRccvryvSheLI",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:8080/dbproj/prescriptions/21345483",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"dbproj",
						"prescriptions",
						"21345483"
					]
				},
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": []
		},
		{
			"name": "Add Prescription",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6Im1hZ2RhbnVuZXNAZ21haWwuY29tIiwidHlwZSI6ImRvY3RvciIsImV4cCI6MTcxNjg2Mjc5Mi4wMzUwODE2fQ.qZkEpnBiUuxA2fBXvSYQVVFs-HXC5fIXZa7sUay40xQ",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"type\": \"hospitalization\",\n    \"event_id\": 5,\n    \"validity\": \"2024-12-31\",\n    \"medicines\":[\n        {\n            \"name\": \"benuron\",\n            \"posology_dose\": \"1 pill\",\n            \"posology_frequency\": \"morning and night\"\n        }\n    ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/dbproj/prescription",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"dbproj",
						"prescription"
					]
				},
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": []
		},
		{
			"name": "Execute Payment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6NjgzNDAzNjUsInR5cGUiOiJwYXRpZW50IiwiZXhwIjoxNzE2ODUxNjUxLjIwODk1MzR9.1etCi_736uS8f1mLYKWWxZLFmIdwAtCKNjgkhfEbWek",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"amount\": 10,\n    \"payment_method\": \"card\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/dbproj/bills/3",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"dbproj",
						"bills",
						"3"
					]
				},
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": []
		},
		{
			"name": "Daily Summary",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6ImNhcmxvc3NpbW9lc0BnbWFpbC5jb20iLCJ0eXBlIjoiYXNzaXN0YW50IiwiZXhwIjoxNzE2NzI5ODI1LjQ1OTQ4NDN9.y-MwsQgI0qRi5dxVzCfapoud0klymzQBH09iChzlxlU",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:8080/dbproj/daily/2024-06-08",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"dbproj",
						"daily",
						"2024-06-08"
					]
				},
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": []
		},
		{
			"name": "Generate Monthly Report",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6ImNhcmxvc3NpbW9lc0BnbWFpbC5jb20iLCJ0eXBlIjoiYXNzaXN0YW50IiwiZXhwIjoxNzE2NzI5ODI1LjQ1OTQ4NDN9.y-MwsQgI0qRi5dxVzCfapoud0klymzQBH09iChzlxlU",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:8080/dbproj/report",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"dbproj",
						"report"
					]
				},
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		}
	]
}